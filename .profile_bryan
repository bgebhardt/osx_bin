#!/bin/bash

# ======================================================
# BASH DEVELOPMENT ENVIRONMENT and OTHER SET UP
# ======================================================

# File is based on original .tcshrc file.  Updated for bash on 11/6/04.

#TODO: merge this with ~/bin/.bash_profile (?)

#set path to include my bin and the developer tools
export PATH=~/bin:/opt/homebrew/bin/:/usr/local/sbin:/usr/local/bin:/Xcode3/Developer/usr/bin:/Developer/Tools:/Applications/Postgres.app/Contents/Versions/10/bin:$PATH:/usr/local/mysql/bin:/usr/local/graphviz-2.14/bin:/Applications/splunk/bin:/Library/Wireshark:/usr/local/share/npm/bin

# git-extra-commands conflictes with git-extras (installed from brew.sh). Removing from path.
# To add it back add this: ~/bin/git-extra-commands/bin:

# ======================================================
# set shell options
# ======================================================

# fix minor spelling mistakes
shopt -s cdspell
# If set, Bash allows filename patterns which match no files to expand to a
# null string, rather than themselves
shopt -s nocaseglob

#### set "set" options ####

# set redirction to not overwrite existing files
# same as noclobber
set -C

# Cause the status of terminated background jobs to be reported immediately,
# rather than before printing the next primary prompt.
# same as notify option
set -b

#set the prompt up includes: history, hostname, up to 3 directories, user name
#PS1="[\h: \W] \u(\!)$"
# colorized version of the prompt with host name and path in title
# PS1='\[\e]2;${HOSTNAME} - ${PWD}\a\]\[\e[0;0m\][\h: \W] \[\e[0;37m\]\u(\!) \[\e[0;0m\]$'
#PS1="[%m:%c03] %n(%h)%#" tcshrc version

# removes duplicate commands from your history (added 7/19/03)
#HISTCONTROL='ignoredups'
HISTIGNORE="&" #alternate more flexible bash feature

# History related items added 7/1/08 -- see http://blog.macromates.com/2008/working-with-history-in-bash/
#export HISTCONTROL=erasedups
export HISTSIZE=10000
shopt -s histappend

# TODO: figure out HOSTFILE variable for host name completion

# Controls the action of the shell on receipt of an EOF character as the sole
# input. If set, the value denotes the number of consecutive EOF characters
# that can be read as the first character on an input line before the shell
# will exit. If the variable exists but does not have a numeric value (or has
# no value) then the default is 10. If the variable does not exist, then EOF
# signifies the end of input to the shell. This is only in effect for
# interactive shells.
IGNOREEOF=""

# shell variable to ignore .o files and ~ files
FIGNORE=".o:~"

#TODO: figure out how to set up .inputrc Readline file.
# can use to do more types of completion, etc.

# ======================================================
# LSCOLORS set up
# ======================================================

# enable colors in terminal -- 11/8/03
export TERM="xterm-color" 
export CLICOLOR="true" 
export LSCOLORS="gxfxcxdxbxegedabagacad" 

# Docs on how to set LSCOLORS
# from http://www.macosxhints.com/article.php?story=20031025162727485
# The colors can be set with the LSCOLORS variable. The color designators are as follows:
# a     black 
# b     red 
# c     green 
# d     brown 
# e     blue 
# f     magenta 
# g     cyan 
# h     light grey 
# A     bold black, usually shows up as dark grey 
# B     bold red 
# C     bold green 
# D     bold brown, usually shows up as yellow 
# E     bold blue 
# F     bold magenta 
# G     bold cyan 
# H     bold light grey; looks like bright white 
# x     default foreground or background 

# Note that the above are standard ANSI colors. The actual display may differ depending on the color capabilities of the terminal in use. The order of the attributes in the LSCOLORS variable is as follows:
# directory
# symbolic link
# socket
# pipe
# executable
# block special
# character special
# executable with setuid bit set
# executable with setgid bit set
# directory writable to others, with sticky bit
# directory writable to others, without sticky bit
# They are set in pairs, foreground (f) then background (b), i.e. fbfbfbfbfbfbfbfbfbfbfb for all 11 settings. The default is exfxcxdxbxegedabagacad, i.e. blue foreground and default background for regular directories, black foreground and red background for setuid executables, etc.

# 05-22-2016: overrridden by bashstrap config nowa
#PROMPT_TITLE='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/~}\007"'
#export PROMPT_COMMAND="${PROMPT_COMMAND} ${PROMPT_TITLE}; "

# this env variable sets the colors for ls-F
export LS_COLORS="di=01;33" 

# set up your xdisplay
export DISPLAY="localhost:0.0"

# ======================================================
# Set up development environment for Java and Python
# ======================================================

# set up STS (Spring Eclipse) Home
export STS_HOME="~/springsource/sts-3.4.0.RELEASE"

# TODO: update this to Eclipse directory
# export ECLIPSE_HOME="~/springsource/sts-3.4.0.RELEASE"

#3. Finally, add Groovy to the path by editing your ~/.profile (or ~/.bash_profile) file. You can use vi or an editor of your choice:
# export GROOVY_HOME=/usr/share/groovy/current
# export PATH=$GROOVY_HOME/bin:$PATH

# 4. Your JAVA_HOME variable should be set as well. On OS X, the recommended way to set the variable is as follows:
export JAVA_HOME=$(/usr/libexec/java_home)

# echo "bash completion..."
# enable bash completion.  Added 11-24-14
if [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

# Setting PATH for Python 3.4
# The orginal version is saved in .profile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.4/bin:${PATH}"
export PATH

# ======================================================
# Other development environment set up
# ======================================================

# SVN stuff
export SVN_EDITOR="code -w"

# my preferred editor
export EDITOR="code -w"  # I switched to visual code!
#export EDITOR="mate -w"


# 05-22-2016: don't remember what this is
PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
